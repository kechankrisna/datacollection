# Created with package:mono_repo v6.0.0
name: Dart Lint CI
on:
  push:
    branches:
      - main
      - master
  pull_request:
  schedule:
    - cron: "0 0 * * 0"
defaults:
  run:
    shell: bash
env:
  PUB_ENVIRONMENT: bot.github

jobs:
  job_001:
    name: mono_repo self validate
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.7
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:stable"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: stable
      - id: checkout
        uses: actions/checkout@v2.4.0
      - name: mono_repo self validate
        run: dart pub global activate mono_repo 6.0.0
      - name: mono_repo self validate
        run: dart pub global run mono_repo generate --validate
  job_002:
    name: "analyze; Dart 3.0.6; PKGS: annotation, example, generator; `dart analyze`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.7
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:3.0.6;packages:annotation-example-generator;commands:analyze"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:3.0.6;packages:annotation-example-generator
            os:ubuntu-latest;pub-cache-hosted;sdk:3.0.6
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: "3.0.6"
      - id: checkout
        uses: actions/checkout@v2.4.0
      - id: annotation_pub_upgrade
        name: annotation; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: annotation
        run: dart pub upgrade
      - name: annotation; dart analyze
        if: "always() && steps.annotation_pub_upgrade.conclusion == 'success'"
        working-directory: annotation
        run: dart analyze
      - id: example_pub_upgrade
        name: example; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: example
        run: dart pub upgrade
      - name: example; dart analyze
        if: "always() && steps.example_pub_upgrade.conclusion == 'success'"
        working-directory: example
        run: dart analyze
      - id: generator_pub_upgrade
        name: generator; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: generator
        run: dart pub upgrade
      - name: generator; dart analyze
        if: "always() && steps.generator_pub_upgrade.conclusion == 'success'"
        working-directory: generator
        run: dart analyze
  job_003:
    name: "analyze; Dart 3.0.6; PKGS: annotation, example, generator; `dart format --output=none --set-exit-if-changed .`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.7
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:3.0.6;packages:annotation-example-generator;commands:format"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:3.0.6;packages:annotation-example-generator
            os:ubuntu-latest;pub-cache-hosted;sdk:3.0.6
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: "3.0.6"
      - id: checkout
        uses: actions/checkout@v2.4.0
      - id: annotation_pub_upgrade
        name: annotation; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: annotation
        run: dart pub upgrade
      - name: "annotation; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.annotation_pub_upgrade.conclusion == 'success'"
        working-directory: annotation
        run: "dart format --output=none --set-exit-if-changed ."
      - id: example_pub_upgrade
        name: example; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: example
        run: dart pub upgrade
      - name: "example; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.example_pub_upgrade.conclusion == 'success'"
        working-directory: example
        run: "dart format --output=none --set-exit-if-changed ."
      - id: generator_pub_upgrade
        name: generator; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: generator
        run: dart pub upgrade
      - name: "generator; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.generator_pub_upgrade.conclusion == 'success'"
        working-directory: generator
        run: "dart format --output=none --set-exit-if-changed ."
  job_004:
    name: "analyze; Dart dev; PKGS: annotation, example, generator; `dart analyze`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.7
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:dev;packages:annotation-example-generator;commands:analyze"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:dev;packages:annotation-example-generator
            os:ubuntu-latest;pub-cache-hosted;sdk:dev
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: dev
      - id: checkout
        uses: actions/checkout@v2.4.0
      - id: annotation_pub_upgrade
        name: annotation; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: annotation
        run: dart pub upgrade
      - name: annotation; dart analyze
        if: "always() && steps.annotation_pub_upgrade.conclusion == 'success'"
        working-directory: annotation
        run: dart analyze
      - id: example_pub_upgrade
        name: example; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: example
        run: dart pub upgrade
      - name: example; dart analyze
        if: "always() && steps.example_pub_upgrade.conclusion == 'success'"
        working-directory: example
        run: dart analyze
      - id: generator_pub_upgrade
        name: generator; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: generator
        run: dart pub upgrade
      - name: generator; dart analyze
        if: "always() && steps.generator_pub_upgrade.conclusion == 'success'"
        working-directory: generator
        run: dart analyze
  job_005:
    name: "analyze; Dart dev; PKGS: annotation, example, generator; `dart format --output=none --set-exit-if-changed .`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.7
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:dev;packages:annotation-example-generator;commands:format"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:dev;packages:annotation-example-generator
            os:ubuntu-latest;pub-cache-hosted;sdk:dev
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: dev
      - id: checkout
        uses: actions/checkout@v2.4.0
      - id: annotation_pub_upgrade
        name: annotation; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: annotation
        run: dart pub upgrade
      - name: "annotation; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.annotation_pub_upgrade.conclusion == 'success'"
        working-directory: annotation
        run: "dart format --output=none --set-exit-if-changed ."
      - id: example_pub_upgrade
        name: example; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: example
        run: dart pub upgrade
      - name: "example; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.example_pub_upgrade.conclusion == 'success'"
        working-directory: example
        run: "dart format --output=none --set-exit-if-changed ."
      - id: generator_pub_upgrade
        name: generator; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: generator
        run: dart pub upgrade
      - name: "generator; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.generator_pub_upgrade.conclusion == 'success'"
        working-directory: generator
        run: "dart format --output=none --set-exit-if-changed ."
  job_006:
    name: "unit_test; Dart 3.0.6; PKGS: annotation, example, generator; `dart test`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.7
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:3.0.6;packages:annotation-example-generator;commands:test"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:3.0.6;packages:annotation-example-generator
            os:ubuntu-latest;pub-cache-hosted;sdk:3.0.6
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: "3.0.6"
      - id: checkout
        uses: actions/checkout@v2.4.0
      - id: annotation_pub_upgrade
        name: annotation; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: annotation
        run: dart pub upgrade
      - name: annotation; dart test
        if: "always() && steps.annotation_pub_upgrade.conclusion == 'success'"
        working-directory: annotation
        run: dart test
      - id: example_pub_upgrade
        name: example; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: example
        run: dart pub upgrade
      - name: example; dart test
        if: "always() && steps.example_pub_upgrade.conclusion == 'success'"
        working-directory: example
        run: dart test
      - id: generator_pub_upgrade
        name: generator; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: generator
        run: dart pub upgrade
      - name: generator; dart test
        if: "always() && steps.generator_pub_upgrade.conclusion == 'success'"
        working-directory: generator
        run: dart test
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
  job_007:
    name: "unit_test; Dart dev; PKGS: annotation, example, generator; `dart test`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.7
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:dev;packages:annotation-example-generator;commands:test"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:dev;packages:annotation-example-generator
            os:ubuntu-latest;pub-cache-hosted;sdk:dev
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: dev
      - id: checkout
        uses: actions/checkout@v2.4.0
      - id: annotation_pub_upgrade
        name: annotation; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: annotation
        run: dart pub upgrade
      - name: annotation; dart test
        if: "always() && steps.annotation_pub_upgrade.conclusion == 'success'"
        working-directory: annotation
        run: dart test
      - id: example_pub_upgrade
        name: example; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: example
        run: dart pub upgrade
      - name: example; dart test
        if: "always() && steps.example_pub_upgrade.conclusion == 'success'"
        working-directory: example
        run: dart test
      - id: generator_pub_upgrade
        name: generator; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: generator
        run: dart pub upgrade
      - name: generator; dart test
        if: "always() && steps.generator_pub_upgrade.conclusion == 'success'"
        working-directory: generator
        run: dart test
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
